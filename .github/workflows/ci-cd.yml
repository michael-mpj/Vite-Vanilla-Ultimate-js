name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  # 🧪 Test and Quality Checks
  test:
    name: 🧪 Test & Quality
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Check formatting
        run: npm run format:check

      - name: 🔍 Lint code
        run: npm run lint:check

      - name: 🧪 Run tests
        run: npm run test:coverage

      - name: 📊 Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage

      - name: 🏗️ Build project
        run: npm run build

      - name: 🏗️ Build docs
        run: npm run docs:build

  # 🔧 Auto-fix (only on main branch)
  auto-fix:
    name: 🔧 Auto-fix & Update
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Check for dependency updates
        id: check-updates
        run: |
          npm run update-deps:check > dependency-updates.txt
          if [ -s dependency-updates.txt ]; then
            echo "Updates available"
            echo "has-updates=true" >> $GITHUB_OUTPUT
          else
            echo "No updates available"
            echo "has-updates=false" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Update dependencies (if needed)
        if: steps.check-updates.outputs.has-updates == 'true'
        run: npm run update-deps

      - name: 🔧 Auto-fix formatting and linting
        run: npm run fix

      - name: 🧪 Run tests after fixes
        run: npm run test:run

      - name: 📝 Commit auto-fixes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Check if there are changes to commit
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: auto-fix formatting, linting, and update dependencies"
            git push
          else
            echo "No changes to commit"
          fi

  # 🚀 Deploy (only on main branch, after auto-fix)
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test, auto-fix]

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      # Deploy to Vercel (requires VERCEL_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID secrets)
      - name: 🚀 Deploy to Vercel
        uses: amondnet/vercel-action@v25
        continue-on-error: true
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./

      - name: 🏗️ Build docs
        run: npm run docs:build

      - name: 🚀 Deploy docs to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs-site/.vitepress/dist
